"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureFirebaseAlertsTriggerRegion = exports.obtainFirebaseAlertsBindings = exports.SERVICE_ACCOUNT_TOKEN_CREATOR_ROLE = void 0;
const error_1 = require("../../../error");
exports.SERVICE_ACCOUNT_TOKEN_CREATOR_ROLE = "roles/iam.serviceAccountTokenCreator";
function obtainFirebaseAlertsBindings(projectNumber, existingPolicy) {
    const pubsubServiceAgent = `serviceAccount:service-${projectNumber}@gcp-sa-pubsub.iam.gserviceaccount.com`;
    let pubsubBinding = existingPolicy.bindings.find((b) => b.role === exports.SERVICE_ACCOUNT_TOKEN_CREATOR_ROLE);
    if (!pubsubBinding) {
        pubsubBinding = {
            role: exports.SERVICE_ACCOUNT_TOKEN_CREATOR_ROLE,
            members: [],
        };
    }
    if (!pubsubBinding.members.find((m) => m === pubsubServiceAgent)) {
        pubsubBinding.members.push(pubsubServiceAgent);
    }
    return Promise.resolve([pubsubBinding]);
}
exports.obtainFirebaseAlertsBindings = obtainFirebaseAlertsBindings;
function ensureFirebaseAlertsTriggerRegion(endpoint) {
    if (!endpoint.eventTrigger.region) {
        endpoint.eventTrigger.region = "global";
    }
    if (endpoint.eventTrigger.region !== "global") {
        throw new error_1.FirebaseError("A firebase alerts trigger must specify 'global' trigger location");
    }
    return Promise.resolve();
}
exports.ensureFirebaseAlertsTriggerRegion = ensureFirebaseAlertsTriggerRegion;
