{"ast":null,"code":"var _jsxFileName = \"/Users/mingyeongso/Documents/GitHub/weekly-score/src/scoreList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Score from \"./score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScoreList = () => {\n  _s();\n\n  const arr = [{\n    'day': '월',\n    'score': 0\n  }, {\n    'day': '화',\n    'score': 0\n  }, {\n    'day': '수',\n    'score': 0\n  }, {\n    'day': '목',\n    'score': 0\n  }, {\n    'day': '금',\n    'score': 0\n  }, {\n    'day': '토',\n    'score': 0\n  }, {\n    'day': '일',\n    'score': 0\n  }];\n  const random = Math.floor(Math.random() * 6);\n  console.log(arr.find(_ref => {\n    let {\n      day\n    } = _ref;\n    return day === '월';\n  })['score']);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: arr.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Score, {\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/edit\",\n          name: \"{day}\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}; // class ScoreList extends React.Component {\n//     constructor(props){\n//       const array = [0, 0, 0, 0, 0]\n//       const newArray = array.map((array_item) => {\n//         return array_item + Math.floor(Math.random() * 6);\n//       });\n//       super(props);\n//       this.state = {\n//         day: ['월','화','수','목','금','토','일'],\n//         score: newArray,\n//       };\n//     }\n//     render() {\n//         return (\n//         <div>\n//             {this.state.day.map((day, index) => {\n//                 return (\n//                     <div className=\"row\" key={index}>\n//                         <p>{day}</p>\n//                         <Score name={score} />\n//                         <Link to=\"/edit\" name=\"{day}\">\n//                           <div className=\"editBtn\"></div>\n//                         </Link>\n//                     </div>\n//                 )\n//             })}\n//         </div>\n//       );\n//     }\n//   }\n\n\n_s(ScoreList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ScoreList;\nexport default ScoreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreList\");","map":{"version":3,"sources":["/Users/mingyeongso/Documents/GitHub/weekly-score/src/scoreList.js"],"names":["React","useEffect","Link","Score","ScoreList","arr","random","Math","floor","console","log","find","day","map","value","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAMC,GAAG,GAAG,CAAC;AAAC,WAAO,GAAR;AAAa,aAAS;AAAtB,GAAD,EAA0B;AAAC,WAAO,GAAR;AAAa,aAAQ;AAArB,GAA1B,EAAkD;AAAC,WAAO,GAAR;AAAa,aAAQ;AAArB,GAAlD,EAA0E;AAAC,WAAO,GAAR;AAAa,aAAQ;AAArB,GAA1E,EAAkG;AAAC,WAAO,GAAR;AAAa,aAAQ;AAArB,GAAlG,EAA0H;AAAC,WAAO,GAAR;AAAa,aAAQ;AAArB,GAA1H,EAAkJ;AAAC,WAAO,GAAR;AAAa,aAAQ;AAArB,GAAlJ,CAAZ;AAEA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,CAA3B,CAAf;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAJ,CAAU;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAaA,GAAG,KAAK,GAArB;AAAA,GAAV,EAAqC,OAArC,CAAZ;AAGAX,EAAAA,SAAS,CAAC,MAAM,CAIjB,CAJU,EAIR,EAJQ,CAAT;AAOA,sBAEE;AAAA,cACKI,GAAG,CAACQ,GAAJ,CAAQ,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEvB,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,oBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAiB,UAAA,IAAI,EAAC,OAAtB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAXA;AADL;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD,CAjCD,C,CAoCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GArEMX,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Score from \"./score\";\n\nconst ScoreList = () => {\n\n  const arr = [{'day': '월', 'score': 0},{'day': '화', 'score':0},{'day': '수', 'score':0},{'day': '목', 'score':0},{'day': '금', 'score':0},{'day': '토', 'score':0},{'day': '일', 'score':0}]  \n\n  const random = Math.floor(Math.random() * 6)\n  console.log(arr.find( ({ day }) => day === '월' )['score'])\n\n\n  useEffect(() => {  \n    \n\n\n}, [])\n  \n\n  return (\n    \n    <div>\n        {arr.map((value, index) => {\n          \n            return (\n                <div className=\"row\" key={index}>\n                    <p>{index}</p>\n                    <Score index={index} />\n                    <Link to=\"/edit\" name=\"{day}\">\n                      <div className=\"editBtn\"></div>\n                    </Link>\n                </div>\n            )\n        })}\n    </div>\n  )\n\n}\n\n\n// class ScoreList extends React.Component {\n    \n    \n//     constructor(props){\n//       const array = [0, 0, 0, 0, 0]\n//       const newArray = array.map((array_item) => {\n//         return array_item + Math.floor(Math.random() * 6);\n//       });\n//       super(props);\n  \n//       this.state = {\n//         day: ['월','화','수','목','금','토','일'],\n//         score: newArray,\n//       };\n//     }\n  \n//     render() {\n//         return (\n//         <div>\n//             {this.state.day.map((day, index) => {\n//                 return (\n//                     <div className=\"row\" key={index}>\n//                         <p>{day}</p>\n//                         <Score name={score} />\n//                         <Link to=\"/edit\" name=\"{day}\">\n//                           <div className=\"editBtn\"></div>\n//                         </Link>\n//                     </div>\n//                 )\n//             })}\n//         </div>\n//       );\n//     }\n//   }\n\n\n\nexport default ScoreList;"]},"metadata":{},"sourceType":"module"}