{"ast":null,"code":"var _jsxFileName = \"/Users/mingyeongso/Documents/GitHub/weekly-score/src/scoreList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useEffect } from \"react-router-dom\";\nimport Score from \"./score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScoreList = () => {\n  _s();\n\n  const array = [0];\n  const newArray = array.map(array_item => {\n    return array_item + Math.floor(Math.random() * 6);\n  });\n  const [day, setDay] = React.useState(['월', '화', '수', '목', '금', '토', '일']);\n  const [score, setScore] = React.useState(newArray);\n  useEffect(() => {\n    const newArray = Math.floor(Math.random() * 6);\n    console.log(newArray);\n    setScore(newArray);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: day.map((day, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [day, score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Score, {\n          index: day,\n          score: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/edit\",\n          name: \"{day}\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}; // class ScoreList extends React.Component {\n//     constructor(props){\n//       const array = [0, 0, 0, 0, 0]\n//       const newArray = array.map((array_item) => {\n//         return array_item + Math.floor(Math.random() * 6);\n//       });\n//       super(props);\n//       this.state = {\n//         day: ['월','화','수','목','금','토','일'],\n//         score: newArray,\n//       };\n//     }\n//     render() {\n//         return (\n//         <div>\n//             {this.state.day.map((day, index) => {\n//                 return (\n//                     <div className=\"row\" key={index}>\n//                         <p>{day}</p>\n//                         <Score name={score} />\n//                         <Link to=\"/edit\" name=\"{day}\">\n//                           <div className=\"editBtn\"></div>\n//                         </Link>\n//                     </div>\n//                 )\n//             })}\n//         </div>\n//       );\n//     }\n//   }\n\n\n_s(ScoreList, \"RY/B/NvUU8qhwAN2AsnUh+NXLCg=\");\n\n_c = ScoreList;\nexport default ScoreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreList\");","map":{"version":3,"sources":["/Users/mingyeongso/Documents/GitHub/weekly-score/src/scoreList.js"],"names":["React","Link","useEffect","Score","ScoreList","array","newArray","map","array_item","Math","floor","random","day","setDay","useState","score","setScore","console","log","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAG,CAAC,CAAD,CAAd;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAWC,UAAD,IAAgB;AACzC,WAAOA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAApB;AACD,GAFgB,CAAjB;AAKA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,KAAK,CAACc,QAAN,CAAe,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAf,CAAtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACc,QAAN,CAAeR,QAAf,CAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAjB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAU,IAAAA,QAAQ,CAACV,QAAD,CAAR;AACH,GAJU,EAIR,EAJQ,CAAT;AAMA,sBACE;AAAA,cACKM,GAAG,CAACL,GAAJ,CAAQ,CAACK,GAAD,EAAMO,KAAN,KAAgB;AACrB,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,qBAAIP,GAAJ,EAASG,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEH,GAAd;AAAmB,UAAA,KAAK,EAAEG;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAiB,UAAA,IAAI,EAAC,OAAtB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA0BI,KAA1B;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAhCD,C,CAmCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GApEMf,S;;KAAAA,S;AAwEN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Link, useEffect } from \"react-router-dom\";\nimport Score from \"./score\";\n\nconst ScoreList = () => {\n  const array = [0]\n  const newArray = array.map((array_item) => {\n    return array_item + Math.floor(Math.random() * 6);\n  });\n  \n  \n  const [day, setDay] = React.useState(['월','화','수','목','금','토','일']);\n  const [score, setScore] = React.useState(newArray);\n\n  useEffect(() => {\n    const newArray = Math.floor(Math.random() * 6);\n    console.log(newArray)\n    setScore(newArray)\n}, [])\n  \n  return (\n    <div>\n        {day.map((day, index) => {\n            return (\n                <div className=\"row\" key={index}>\n                    <p>{day}{score}</p>\n                    <Score index={day} score={score} />\n                    <Link to=\"/edit\" name=\"{day}\">\n                      <div className=\"editBtn\"></div>\n                    </Link>\n                </div>\n            )\n        })}\n    </div>\n  )\n\n}\n\n\n// class ScoreList extends React.Component {\n    \n    \n//     constructor(props){\n//       const array = [0, 0, 0, 0, 0]\n//       const newArray = array.map((array_item) => {\n//         return array_item + Math.floor(Math.random() * 6);\n//       });\n//       super(props);\n  \n//       this.state = {\n//         day: ['월','화','수','목','금','토','일'],\n//         score: newArray,\n//       };\n//     }\n  \n//     render() {\n//         return (\n//         <div>\n//             {this.state.day.map((day, index) => {\n//                 return (\n//                     <div className=\"row\" key={index}>\n//                         <p>{day}</p>\n//                         <Score name={score} />\n//                         <Link to=\"/edit\" name=\"{day}\">\n//                           <div className=\"editBtn\"></div>\n//                         </Link>\n//                     </div>\n//                 )\n//             })}\n//         </div>\n//       );\n//     }\n//   }\n\n\n\nexport default ScoreList;"]},"metadata":{},"sourceType":"module"}